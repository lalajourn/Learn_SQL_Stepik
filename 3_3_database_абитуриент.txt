1. Вывести абитуриентов, которые хотят поступать на образовательную программу «Мехатроника и робототехника» в отсортированном по фамилиям виде.

Ответ:

SELECT name_enrollee
FROM enrollee
    INNER JOIN program_enrollee USING (enrollee_id)
    INNER JOIN program USING (program_id)
WHERE name_program LIKE 'Мехатроника и робототехника'
ORDER BY 1;

*****

2. Вывести образовательные программы, на которые для поступления необходим предмет «Информатика». Программы отсортировать в обратном алфавитном порядке.

Ответ:

SELECT name_program
FROM program
    INNER JOIN program_subject USING (program_id)
    INNER JOIN subject USING (subject_id)
WHERE name_subject LIKE 'Информатика'
ORDER BY name_program DESC;

*****

3. Выведите количество абитуриентов, сдавших ЕГЭ по каждому предмету, максимальное, минимальное и среднее значение баллов по предмету ЕГЭ. Вычисляемые столбцы назвать Количество, Максимум, Минимум, Среднее. Информацию отсортировать по названию предмета в алфавитном порядке, среднее значение округлить до одного знака после запятой.

Ответ:

SELECT name_subject,
COUNT(enrollee_subject.subject_id) AS Количество,
MAX(result) AS Максимум,
MIN(result) AS Минимум,
ROUND(AVG(result), 1) AS Среднее
FROM subject
    INNER JOIN enrollee_subject USING (subject_id)
GROUP BY name_subject
ORDER BY name_subject;

*****

4. Вывести образовательные программы, для которых минимальный балл ЕГЭ по каждому предмету больше или равен 40 баллам. Программы вывести в отсортированном по алфавиту виде.

Ответ:

SELECT name_program
FROM program
    INNER JOIN program_subject USING (program_id)
GROUP BY 1
HAVING MIN(min_result) >= 40
ORDER BY 1;

*****

5. Вывести образовательные программы, которые имеют самый большой план набора,  вместе с этой величиной.

Ответ:

SELECT name_program, plan
FROM program
WHERE plan = (
    SELECT MAX(plan)
    FROM program
    );
    
*****

6. Посчитать, сколько дополнительных баллов получит каждый абитуриент. Столбец с дополнительными баллами назвать Бонус. Информацию вывести в отсортированном по фамилиям виде.

Ответ:

SELECT name_enrollee,
IF(SUM(bonus) IS NULL, 0, SUM(bonus)) AS Бонус
FROM enrollee
    LEFT JOIN enrollee_achievement USING (enrollee_id)
    LEFT JOIN achievement USING (achievement_id) 
GROUP BY name_enrollee
ORDER BY name_enrollee;

*****

7. Выведите сколько человек подало заявление на каждую образовательную программу и конкурс на нее (число поданных заявлений деленное на количество мест по плану), округленный до 2-х знаков после запятой. В запросе вывести название факультета, к которому относится образовательная программа, название образовательной программы, план набора абитуриентов на образовательную программу (plan), количество поданных заявлений (Количество) и Конкурс. Информацию отсортировать в порядке убывания конкурса.

Ответ:

SELECT name_department, name_program, plan,
COUNT(enrollee_id) AS Количество,
ROUND((COUNT(enrollee_id) / plan), 2) AS Конкурс
FROM department
    INNER JOIN program USING (department_id)
    INNER JOIN program_enrollee USING (program_id)             
GROUP BY name_department, name_program, plan
ORDER BY 5 DESC;

*****

8. Вывести образовательные программы, на которые для поступления необходимы предмет «Информатика» и «Математика» в отсортированном по названию программ виде.

Ответ:

SELECT name_program
FROM program
    INNER JOIN program_subject USING (program_id)
    INNER JOIN subject USING (subject_id)
WHERE name_subject IN ('Информатика', 'Математика')
GROUP BY 1
HAVING COUNT(name_program) = 2
ORDER BY 1;

*****
