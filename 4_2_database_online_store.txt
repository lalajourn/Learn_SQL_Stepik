1. Магазин счёл, что классика уже не пользуется популярностью, поэтому необходимо в выборке:

1. Сменить всех авторов на "Донцова Дарья".
2. К названию каждой книги в начале дописать "Евлампия Романова и " ( пробел в конце).
3. Цену поднять на 42% (округлить её до двух знаков после запятой).
4. Отсортировать по убыванию цены.

Ответ:

SELECT 'Донцова Дарья' AS author, CONCAT('Евлампия Романова и ', title) AS title, ROUND((price*1.42), 2) AS price
FROM book
ORDER BY price DESC;

*****

2. Вывести жанр(ы), в котором было заказано меньше всего экземпляров книг, указать это количество. Учитывать только жанры, в которых была заказана хотя бы одна книга.
При реализации в основном запросе не используйте LIMIT, поскольку жанров с минимальным количеством заказанных книг может быть несколько.

Ответ:

SELECT name_genre, SUM(buy_book.amount) AS Количество
FROM genre 
     INNER JOIN book USING (genre_id)
     INNER JOIN buy_book USING (book_id)
GROUP BY name_genre
HAVING SUM(buy_book.amount) > 1 AND SUM(buy_book.amount) IN(
    SELECT MIN(temp_2) FROM
    (SELECT SUM(buy_book.amount) AS temp_2 FROM buy_book
     INNER JOIN book USING (book_id)
     GROUP BY genre_id) temp
    );
    
*****

3. Создать новую таблицу store, в которую занести данные из таблиц book и supply, при условии, что количество книг будет больше среднего количества книг по двум таблицам; если книга есть в обеих таблицах, то стоимость выбрать большую из двух. Отсортировать данные из таблицы их по имени автора в алфавитном порядке и по убыванию цены. Вывести данные из полученной таблицы.

Ответ:

CREATE TABLE store AS
SELECT title, author, MAX(price) AS price,
SUM(amount) AS amount
FROM (
    SELECT title, author, price, amount
    FROM book
    UNION ALL
    SELECT title, author, price, amount
    FROM supply) AS temp
GROUP BY title, author
HAVING amount > (SELECT ROUND(SUM(amount) / COUNT(title), 2)
    FROM (SELECT title, amount
          FROM book 
          UNION 
          SELECT title, amount
          FROM supply) AS temp1)
ORDER BY author ASC, price DESC;

SELECT * FROM store;

*****

4. Объявить столбец "категории цены" (price_category): <500 - "низкая", 500 - 700 - "средняя", более 700 - "высокая"
Вывести автора, название, категорию, стоимость (цена * количество), исключив из авторов Есенина, из названий "Белую гвардию". Отсортировать по убыванию стоимости и названию (по возрастанию).

Ответ:

SELECT author, title,
IF(price < 500, 'низкая', IF(price > 700, 'высокая', 'средняя')) AS price_category,
price * amount AS cost
FROM book
WHERE author <> 'Есенин С.А.' AND title <> 'Белая гвардия' 
ORDER BY 4 DESC, 2;

*****
