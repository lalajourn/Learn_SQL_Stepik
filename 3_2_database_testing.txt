1. В таблицу attempt включить новую попытку для студента Баранова Павла по дисциплине «Основы баз данных». Установить текущую дату в качестве даты выполнения попытки.

Ответ:

INSERT INTO attempt (student_id, subject_id, date_attempt)
SELECT student.student_id, subject.subject_id, NOW() 
FROM student, subject  
WHERE name_student = 'Баранов Павел' AND name_subject = 'Основы баз данных';

SELECT * FROM attempt;

*****

2. Случайным образом выбрать три вопроса (запрос) по дисциплине, тестирование по которой собирается проходить студент, занесенный в таблицу attempt последним, и добавить их в таблицу testing. id последней попытки получить как максимальное значение id из таблицы attempt.

Ответ:

INSERT INTO testing (attempt_id, question_id)
SELECT attempt_id, question_id
FROM question
     INNER JOIN attempt USING(subject_id)
WHERE attempt_id = (SELECT MAX(attempt_id) 
                    FROM attempt)
ORDER BY RAND()
LIMIT 3;

SELECT * FROM testing;

*****

3. Студент прошел тестирование (то есть все его ответы занесены в таблицу testing), далее необходимо вычислить результат(запрос) и занести его в таблицу attempt для соответствующей попытки.  Результат попытки вычислить как количество правильных ответов, деленное на 3 (количество вопросов в каждой попытке) и умноженное на 100. Результат округлить до целого.

Будем считать, что мы знаем id попытки,  для которой вычисляется результат, в нашем случае это 8.
 
Ответ:
 
UPDATE attempt
SET result = (
    SELECT ROUND(SUM(is_correct / 3 * 100), 0)
    FROM answer
    INNER JOIN testing USING (answer_id)
    WHERE attempt_id = 8)
WHERE attempt_id = 8;

SELECT * FROM attempt;

*****

4. Удалить из таблицы attempt все попытки, выполненные раньше 1 мая 2020 года. Также удалить и все соответствующие этим попыткам вопросы из таблицы testing, которая создавалась следующим запросом:

CREATE TABLE testing (
    testing_id INT PRIMARY KEY AUTO_INCREMENT, 
    attempt_id INT, 
    question_id INT, 
    answer_id INT,
    FOREIGN KEY (attempt_id)  REFERENCES attempt (attempt_id) ON DELETE CASCADE
);

Ответ:

DELETE FROM attempt
WHERE date_attempt < '2020-05-01';

SELECT * FROM attempt;
SELECT * FROM testing;

*****

5. Добавить новый столбец в таблицу попыток сдачи Well_done и добавить подпись студентам, результат которых более 67 баллов - Супер_молодец, у кого результат =67 - Молодец. У остальных оставить пустые значения.

Ответ:

SELECT student_id, subject_id, date_attempt, result,
IF(result > 67, 'Супер-молодец', IF(result = 67, 'Молодец', '')) AS well_done
FROM attempt;
